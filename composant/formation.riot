<formation>
    <div class="box p-1 m-2">
    <div class="columns m-1">
        <input class="input" oninput={searchF} type="input" placeholder= {state.formation}>
        <button class="button ml-1" disabled="disabled" id="back"><</button>
    </div>    
        <div id="list-formations">
            <ul>
                <li class="m-1" onClick={selectFormation} data-formation="{item.name}"  each={item in this.state.items}>
                   <button  class="button is-fullwidth p-2" >
                   <span style="font-size: .75em; max-size: 90%">
                   <strong>{item.name}</strong>
                   </span>
                   <div style="margin-left: auto;"></div>
                   <span class="tag is-primary">{item.count}</span>
                </li>
            </ul>
        </div>
    </div>
    </div>
    <script>



        export default {
                clickCounter: 0,

                        async findformation(queryString = "") {
                console.log(`https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcoursup&q=&sort=tri&facet=fili${queryString}`)  
                let result = await fetch(`https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcoursup&q=&sort=tri&facet=fili${queryString}`);
                let resultats = await result.json();
                console.log(resultats)
                let table = []
                console.log(this.clickCounter)

                if (this.clickCounter === 0) {
                    table = resultats["facet_groups"][0]["facets"];
                } else if (this.clickCounter === 1){
                    table = resultats["facet_groups"][11]["facets"];
                } else if (this.clickCounter === 2){
                    table = resultats["facet_groups"][8]["facets"];
                }
                console.log(table)
                return table;
                },
                onBeforeMount(props, state) {
                // initial state
                    this.state = {
                        formation: props.formation,
                        items: null
                    }
                    this.findformation("").then((response) => {
                        this.update({
                            items: response
                        })
                    console.log(this.state.items)
                    })
                },


                searchF(){
                    this.findformation("").then((response) => {
                        this.update({
                            items: response
                        })
                    })
                    console.log(this.state.items)
                },
                selectFormation(event) {
                    console.log("clique effectuÃ©")
                    const selectedFormation = event.target.textContentgetAttribute('data-formation');;
                        this.update({
                        formation: selectedFormation
 
                    });

                    this.clickCounter++;

                     if (this.clickCounter === 1) {
                 this.findformation(`&refine.fili=${selectedFormation}`).then((response) => {
                     this.update({
                     items: response
                          });
                      console.log(this.state.items)   
                  });

                } else if (this.clickCounter === 2) {
                    this.findformation(`&refine.form_lib_voe_acc=${selectedFormation}`).then((response) => {
                this.update({
                    items: response
                });
                });
                }
        }

        }
        
    </script>
</formation>